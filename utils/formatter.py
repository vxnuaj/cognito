from typing import List
from utils.shared_types import Summary
from utils.arxiv_utils import PaperMetadata

class Formatter:
    def format_markdown(self, summaries: List[Summary], papers_metadata: List[PaperMetadata]) -> str:
        print("Formatter: Compiling results into Markdown...")
        markdown_output = "# Research Paper Summaries\n\n"
        markdown_output += "This document provides summaries of research papers based on your query.\n\n"

        for i, summary in enumerate(summaries):
            paper_metadata = papers_metadata[i] # Assuming 1:1 correspondence
            markdown_output += f"---\n\n"
            markdown_output += f"## {paper_metadata.title}\n\n"
            markdown_output += f"**Authors:** {', '.join(paper_metadata.authors)}\n\n"
            markdown_output += f"**arXiv ID:** [{paper_metadata.arxiv_id}](https://arxiv.org/abs/{paper_metadata.arxiv_id})\n\n"
            markdown_output += f"**PDF Link:** [Download PDF]({paper_metadata.pdf_url})\n\n"
            markdown_output += f"### TL;DR\n{summary.tldr}\n\n"
            markdown_output += f"### Key Contributions\n{summary.key_contributions}\n\n"
            markdown_output += f"### Novelty\n{summary.novelty}\n\n"
            markdown_output += f"### Limitations and Criticisms\n{summary.limitations_criticisms}\n\n"
            markdown_output += f"### Explain Like I'm 5\n{summary.explain_like_im_5}\n\n"

        markdown_output += "---\n\n"
        markdown_output += "*Generated by Orgo AI Agents*\n"

        print("Formatter: Markdown compilation complete.")
        return markdown_output
